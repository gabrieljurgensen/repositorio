const express = require('express');
const router = express.Router();
const db = require('../db');

// listar
router.get('/', (req, res) => {
  db.query('SELECT * FROM itens_venda', (err, results) => {
    if (err) { console.error(err); return res.status(500).json({ error: 'Erro ao buscar itens_venda' }); }
    res.json(results);
  });
});

// listar por venda
router.get('/venda/:venda_id', (req, res) => {
  db.query('SELECT * FROM itens_venda WHERE venda_id = ?', [req.params.venda_id], (err, results) => {
    if (err) { console.error(err); return res.status(500).json({ error: 'Erro ao buscar itens de venda' }); }
    res.json(results);
  });
});

// criar item venda
router.post('/', (req, res) => {
  const { venda_id, produto_id, qtd_vendida, preco_unitario } = req.body;
  if (!venda_id || !produto_id || qtd_vendida === undefined) return res.status(400).json({ error: 'venda_id, produto_id e qtd_vendida obrigatórios' });

  db.query('INSERT INTO itens_venda (produto_id, venda_id, qtd_vendida, preco_unitario, criado_em) VALUES (?, ?, ?, ?, NOW())', [produto_id, venda_id, qtd_vendida, preco_unitario || 0], (err, result) => {
    if (err) { console.error(err); return res.status(500).json({ error: 'Erro ao criar item_venda' }); }
    res.status(201).json({ id: result.insertId });
  });
});

// atualizar item
router.put('/:id', (req, res) => {
  const { venda_id, produto_id, qtd_vendida, preco_unitario } = req.body;
  db.query('UPDATE itens_venda SET produto_id = ?, venda_id = ?, qtd_vendida = ?, preco_unitario = ?, atualizado_em = NOW() WHERE id = ?', [produto_id, venda_id, qtd_vendida, preco_unitario, req.params.id], (err, result) => {
    if (err) { console.error(err); return res.status(500).json({ error: 'Erro ao atualizar item_venda' }); }
    if (result.affectedRows === 0) return res.status(404).json({ error: 'Item não encontrado' });
    res.json({ message: 'Item de venda atualizado' });
  });
});

// deletar item
router.delete('/:id', (req, res) => {
  db.query('DELETE FROM itens_venda WHERE id = ?', [req.params.id], (err, result) => {
    if (err) { console.error(err); return res.status(500).json({ error: 'Erro ao deletar item_venda' }); }
    if (result.affectedRows === 0) return res.status(404).json({ error: 'Item não encontrado' });
    res.json({ message: 'Item de venda deletado' });
  });
});

module.exports = router;
